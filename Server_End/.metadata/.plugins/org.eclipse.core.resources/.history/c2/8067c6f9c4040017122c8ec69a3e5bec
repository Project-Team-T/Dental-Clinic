package com.dentalclinic.appointment;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.dentalclinic.dentist.Dentist;
import com.dentalclinic.dentist.Schedule;
import com.dentalclinic.patient.Patient;

@Controller
@RequestMapping(path="/appointment")
public class AppointmentController {
	
	private static final String VIEWS_APPOINTMENT_CREATE_OR_UPDATE_FORM = "dentist/createOrUpdateAppointmentForm";
	private final AppointmentRepository appointmentRP;
	
	@Autowired
	public AppointmentController(AppointmentRepository appointmentService){
		this.appointmentRP = appointmentService;
	}
	@InitBinder
    public void setAllowedFields(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
	
	@RequestMapping(path="")
	public String AppointmentList(Map<String, Object> model){
		List<Appointment> appointments = new ArrayList<>();
		appointments.addAll(this.appointmentRP.findAll());
		model.put("appointments", appointments);
		return "appointment/appointmentList";
	}
	
	@RequestMapping(path="/new", method = RequestMethod.Get)
	public String initCreationForm(Dentist dentist, Patient patient, AppointmentType appointmentType, ModelMap model){
		Appointment appointment = new Appointment();
		dentist.addAppointment(appointment);
		patient.addAppointment(appointment);
		//appointmentType.addAppointmentType(appointment);
		model.put("appointment", appointment);
		return VIEWS_APPOINTMENT_CREATE_OR_UPDATE_FORM;
	}
	
	
	@RequestMapping(value="/update", method = RequestMethod.GET)
    public String initUpdateForm(Dentist dentist, ModelMap model){
    	Schedule schedule = new Schedule();
    	dentist.addSchedule(schedule);
    	model.put("schedule", schedule);
    	return VIEWS_SCHEDULE_CREATE_OR_UPDATE_FORM;
    }
    
    @RequestMapping(value="/update", method = RequestMethod.POST) 
    public String processUpdateForm(Dentist dentist, @Valid Schedule schedule, BindingResult result, ModelMap model){
    	if(result.hasErrors()){
    		model.put("schedule", schedule);
    		return VIEWS_SCHEDULE_CREATE_OR_UPDATE_FORM;
    	}else{
    		dentist.addSchedule(schedule);
    		this.scheduleRP.save(schedule);
    		return "redirect:/dentist/{dentistId}";
    	}
    }
}
